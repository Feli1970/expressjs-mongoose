<div class="container mt-5">
  <h2 class="text-center">Registro de Usuario</h2>
  <form id="registerForm" class="mt-4 row" novalidate>
    <div class="col-lg-4">
      <div class="mb-3">
        <label for="nombre" class="form-label">Nombre</label>
        <input type="text" class="form-control" id="nombre" name="nombre">
        <div class="invalid-feedback">El nombre es obligatorio.</div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="mb-3">
        <label for="email" class="form-label">Correo Electrónico</label>
        <input type="email" class="form-control" id="email" name="email">
        <div class="invalid-feedback">El correo electrónico es obligatorio.</div>
      </div>
    </div>
    <div class="col-lg-4">
      <div class="mb-3">
        <label for="celular" class="form-label">Celular</label>
        <input type="tel" class="form-control" id="celular" name="celular">
        <div class="invalid-feedback">El celular es obligatorio.</div>
      </div>
    </div>
    <div class="col-lg-6">
      <div class="mb-3">
        <label for="password" class="form-label">Contraseña</label>
        <input type="password" class="form-control" id="password" name="password">
        <div class="invalid-feedback">La contraseña es obligatoria.</div>
      </div>
    </div>
    <div class="col-lg-6">
      <div class="mb-3">
        <label for="password-confirmar" class="form-label">Confirmar contraseña</label>
        <input type="password" class="form-control" id="password-confirmar" name="password-confirmar">
        <div class="invalid-feedback">La confirmación de la contraseña es obligatoria.</div>
      </div>
    </div>
    <div class="col-lg-12">
      <button type="submit" id="registerButton" class="btn btn-primary w-100 ">
        <span id="buttonText">Registrar</span>
        <div id="spinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></div>
      </button>
    </div>
  </form>
  <div id="message" class="mt-3 mb-5"></div>
</div>

<script>
  document.getElementById('registerForm').addEventListener('submit', async (e) => {
    e.preventDefault();

    const registerButton = document.getElementById('registerButton');
    const spinner = document.getElementById('spinner');
    const buttonText = document.getElementById('buttonText');
    const messageDiv = document.getElementById('message');

    // Validar inputs
    const inputs = Array.from(document.querySelectorAll('#registerForm input'));
    let isValid = true;

    inputs.forEach(input => {
      if (input.value.trim() === '') {
        input.classList.add('is-invalid');
        input.classList.remove('is-valid');
        isValid = false;
      } else {
        input.classList.remove('is-invalid');
        input.classList.add('is-valid');
      }
    });

    // Verificar coincidencia de contraseñas
    const password = document.getElementById('password').value.trim();
    const passwordConfirmar = document.getElementById('password-confirmar').value.trim();
    if (password !== passwordConfirmar) {
      document.getElementById('password-confirmar').classList.add('is-invalid');
      messageDiv.innerHTML = `<div class="alert alert-danger">Las contraseñas no coinciden.</div>`;
      return;
    } else {
      document.getElementById('password-confirmar').classList.remove('is-invalid');
    }

    // Detener si los inputs no son válidos
    if (!isValid) {
      messageDiv.innerHTML = `<div class="alert alert-danger">Por favor, complete todos los campos obligatorios.</div>`;
      return;
    }

    // Mostrar el spinner y deshabilitar el botón
    spinner.classList.remove('d-none');
    buttonText.classList.add('d-none');
    registerButton.disabled = true;

    const data = {
      nombre: document.getElementById('nombre').value.trim(),
      email: document.getElementById('email').value.trim(),
      celular: document.getElementById('celular').value.trim(),
      password: password,
    };

    try {
      const response = await axios.post('/api/auth/register', data);
      messageDiv.innerHTML = `<div class="alert alert-success">${response.data.message}</div>`;
      inputs.forEach(input => input.classList.remove('is-valid')); // Limpiar estado visual
      // Redirigir al dashboard si el registro es exitoso (comprobando la existencia de "user")
      if (response.data.user) {
          window.location.href = '/usuarios/dashboard';
      }
    } catch (error) {
      messageDiv.innerHTML = `<div class="alert alert-danger">${error.response?.data?.message || 'Ocurrió un error.'}</div>`;
    } finally {
      // Ocultar el spinner y habilitar el botón
      spinner.classList.add('d-none');
      buttonText.classList.remove('d-none');
      registerButton.disabled = false;
    }
  });
</script>
